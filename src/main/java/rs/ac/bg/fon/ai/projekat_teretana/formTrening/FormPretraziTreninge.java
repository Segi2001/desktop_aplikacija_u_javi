/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rs.ac.bg.fon.ai.projekat_teretana.formTrening;

import java.awt.Point;
import java.io.IOException;
import rs.ac.bg.fon.ai.projekat_teretana.controller.ClientController;
import rs.ac.bg.fon.ai.projekat_teretana.domain.TipTreninga;
import rs.ac.bg.fon.ai.projekat_teretana.domain.Trening;
import rs.ac.bg.fon.ai.projekat_teretana.formTrening.constants.MyConstantsTrening;
import rs.ac.bg.fon.ai.projekat_teretana.mainForms.MainForm;
import rs.ac.bg.fon.ai.projekat_teretana.models.ModelTabeleTrening;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;



/**
 *
 * @author Stefan Segrt
 */
public class FormPretraziTreninge extends javax.swing.JDialog {

    private int mode;
    private MainForm parent;

    /**
     * Creates new form FormPretraziTreninge
     */
    public FormPretraziTreninge(java.awt.Frame parent, boolean modal, int mode) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.mode = mode;
        this.parent = (MainForm) parent;
        popuniComboBox();
        List<Trening> treninzi;
        try {
            treninzi = ClientController.getInstance().getListTrening();
            ModelTabeleTrening mtt = new ModelTabeleTrening(treninzi);
            tblTreninzi.setModel(mtt);
        } catch (Exception ex) {
            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
                ex.printStackTrace();
                System.exit(0);

            }

        }

    }

    public MainForm vratiParent() {
        return parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbTip = new javax.swing.JComboBox<>();
        btnFiltriraj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTreninzi = new javax.swing.JTable();
        btnDetalji = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCena = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Izaberite tip:");

        btnFiltriraj.setText("Filtriraj");
        btnFiltriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrirajActionPerformed(evt);
            }
        });

        tblTreninzi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTreninzi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTreninziMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTreninzi);

        btnDetalji.setText("Detalji");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        jLabel2.setText("Ukucajte cenu:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbTip, 0, 198, Short.MAX_VALUE)
                    .addComponent(txtCena))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFiltriraj)
                .addGap(119, 119, 119))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(btnDetalji)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFiltriraj)
                        .addGap(26, 26, 26)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetalji)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed

        try {
            int selektovaniRed = tblTreninzi.getSelectedRow();
            if (selektovaniRed == -1) {
                JOptionPane.showMessageDialog(this, "Niste selektovali ni jedan red");
                return;
            }

            ModelTabeleTrening mtt = (ModelTabeleTrening) tblTreninzi.getModel();
            List<Trening> treninzi = mtt.getTreninzi();
            Trening t = treninzi.get(selektovaniRed);

            t = ClientController.getInstance().loadTrening(t);
            JOptionPane.showMessageDialog(this, "Sistem je ucitao trening");

            if (this.mode == MyConstantsTrening.IZMENI_TRENING) {
                TreningForm tf = new TreningForm(this, true, this.mode, t);
                tf.setVisible(true);

            } else {
                TreningForm tf = new TreningForm(this, true, this.mode, t);
                tf.setVisible(true);
            }

        } catch (Exception ex) {
            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
                System.exit(0);

            }
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnDetaljiActionPerformed

    private void btnFiltrirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrirajActionPerformed
        try {
            TipTreninga tip = (TipTreninga) cmbTip.getSelectedItem();
            int cena = 0;
            if (!txtCena.getText().isEmpty()) {
                if (!txtCena.getText().matches("[\\d]+")) {
                    JOptionPane.showMessageDialog(this, "Cena mora biti broj!!!");
                    return;
                } else {
                    cena = Integer.parseInt(txtCena.getText());
                    if (cena <= 0) {
                        JOptionPane.showMessageDialog(this, "Cena mora biti broj veci od nule!!");
                        return;
                    }
                }
            }
            if (txtCena.getText().isEmpty() && tip == null) {
                JOptionPane.showMessageDialog(this, "Morate selektovati ili popuniti barem jedno polje!!!");
                return;
            }

            Trening t = new Trening();
            t.setTip(tip);
            t.setCena(cena);

            List<Trening> treninzi = ClientController.getInstance().searchTrening(t);
            ModelTabeleTrening mtt = new ModelTabeleTrening(treninzi);
            tblTreninzi.setModel(mtt);
            JOptionPane.showMessageDialog(this, "Sistem je nasao treninge po zadatoj vrednosti");
            cmbTip.setSelectedIndex(-1);
            txtCena.setText("");

            int width = 150;
            TableColumn column = tblTreninzi.getColumnModel().getColumn(0);
            column.setPreferredWidth(width);
        } catch (Exception ex) {

            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
                System.exit(0);

            }
            List<Trening> treninzi = new ArrayList<>();
            ModelTabeleTrening mtt = new ModelTabeleTrening(treninzi);
            tblTreninzi.setModel(mtt);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }


    }//GEN-LAST:event_btnFiltrirajActionPerformed

    private void tblTreninziMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTreninziMouseClicked

        JTable tabela = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int red = tabela.rowAtPoint(point);
        int kolona = tabela.columnAtPoint(point);

        ModelTabeleTrening mtp = (ModelTabeleTrening) tblTreninzi.getModel();
        if (mtp.getKolone()[kolona].equals("Opis tipa")) {

            String text = mtp.getTreninzi().get(red).getTip().getOpis();
            JOptionPane.showMessageDialog(this, text);
        }
    }//GEN-LAST:event_tblTreninziMouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FormPretraziTreninge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FormPretraziTreninge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FormPretraziTreninge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FormPretraziTreninge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FormPretraziTreninge().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnFiltriraj;
    private javax.swing.JComboBox<TipTreninga> cmbTip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTreninzi;
    private javax.swing.JTextField txtCena;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBox() {

        try {
            List<TipTreninga> tipovi = ClientController.getInstance().getListTip();
            for (TipTreninga tipTreninga : tipovi) {
                cmbTip.addItem(tipTreninga);
            }
            cmbTip.setSelectedIndex(-1);

        } catch (Exception ex) {
            if(ex instanceof IOException){
            JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
            System.exit(0);
            }
        }
    }

    void refreshForm() {
        try {
            TipTreninga tip = (TipTreninga) cmbTip.getSelectedItem();
            int cena = 0;
            if (!txtCena.getText().isEmpty()) {
                if (!txtCena.getText().matches("[\\d]+")) {
                    JOptionPane.showMessageDialog(this, "Cena mora biti broj!!!");
                    return;
                } else {
                    cena = Integer.parseInt(txtCena.getText());
                    if (cena <= 0) {
                        JOptionPane.showMessageDialog(this, "Cena mora biti broj veci od nule!!");
                        return;
                    }
                }
            }
            Trening t = new Trening();
            t.setTip(tip);
            t.setCena(cena);

            List<Trening> treninzi = ClientController.getInstance().searchTrening(t);
            ModelTabeleTrening mtt = new ModelTabeleTrening(treninzi);
            tblTreninzi.setModel(mtt);

        } catch (Exception ex) {
            if(ex instanceof IOException){
            JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
            System.exit(0);
            }
            List<Trening> treninzi = new ArrayList<>();
            ModelTabeleTrening mtt = new ModelTabeleTrening(treninzi);
            tblTreninzi.setModel(mtt);
            //JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }
}
