/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rs.ac.bg.fon.ai.projekat_teretana.formTrener;

import static com.google.protobuf.JavaFeaturesProto.java;
import java.io.IOException;
import rs.ac.bg.fon.ai.projekat_teretana.controller.ClientController;
import rs.ac.bg.fon.ai.projekat_teretana.domain.Trener;
import rs.ac.bg.fon.ai.projekat_teretana.formTrener.constants.MyConstantsTrener;
import rs.ac.bg.fon.ai.projekat_teretana.mainForms.MainForm;
import javax.swing.JOptionPane;
import rs.ac.bg.fon.ai.projekat_teretana.json.JsonUtils;

/**
 *
 * @author Stefan Segrt
 */
public class TrenerForm extends javax.swing.JDialog {

    private int mode;

    MainForm mf;

    /**
     * Creates new form KreirajTrenera
     */
    public TrenerForm(java.awt.Frame parent, boolean modal, int mode) {
        super(parent, modal);
        initComponents();
        this.mode = mode;
        prepareForm();
        mf = (MainForm) parent;
        cmbSertifikat.setSelectedIndex(-1);
        setTitle("Dodaj trenera");
    }

    public TrenerForm(java.awt.Dialog parent, boolean modal, int mode, Trener trener) {
        super(parent, modal);
        initComponents();
        this.mode = mode;
        txtIme.setText(trener.getIme());
        txtPrezime.setText(trener.getPrezime());
        txtKontakt.setText(trener.getKontakt());
        txtGdnIsk.setText(String.valueOf(trener.getGodineIskustva()));
        cmbSertifikat.setSelectedItem(String.valueOf(trener.isSertifikat()));
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtKontakt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbSertifikat = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtGdnIsk = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("Kontakt");

        jLabel4.setText("Sertifikat");

        cmbSertifikat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        jLabel5.setText("Godina Iskustva");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbSertifikat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKontakt, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnDodaj)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnOtkazi))
                            .addComponent(txtGdnIsk, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKontakt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbSertifikat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtGdnIsk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnOtkazi))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        try {

//            if (txtGdnIsk.getText().isEmpty()) {
//                JOptionPane.showMessageDialog(this, "Polje godine iskustva mora biti popunjeno!!!");
//                return;
//            }
            String ime = txtIme.getText();
            String prezime = txtPrezime.getText();

            String strSert = (String) cmbSertifikat.getSelectedItem();
            Boolean sertifikat = null;
            if (strSert != null) {
                if (strSert.equals("YES")) {
                    sertifikat = true;
                } else {
                    sertifikat = false;
                }
            }

            String kontakt = txtKontakt.getText();
            String godStr = txtGdnIsk.getText();
            int godineIsk = 0;

            String porukaZaPrazno = "";
            int brojac = 0;
            if (ime.isEmpty() || prezime.isEmpty() || strSert == null || kontakt.isEmpty() || godStr.isEmpty()) {

                if (ime.isEmpty()) {
                    porukaZaPrazno += "ime, ";
                    brojac++;
                }
                if (prezime.isEmpty()) {
                    porukaZaPrazno += "prezime, ";
                    brojac++;
                }
                if (strSert == null) {
                    porukaZaPrazno += "sertifikat, ";
                    brojac++;
                }
                if (kontakt.isEmpty()) {
                    porukaZaPrazno += "kontakt, ";
                    brojac++;

                }
                if (godStr.isEmpty()) {
                    porukaZaPrazno += "godine iskustva";
                    brojac++;
                }
                if (brojac == 1) {
                    porukaZaPrazno = "Polje " + porukaZaPrazno + " nije popunjeno.";
                    JOptionPane.showMessageDialog(this, porukaZaPrazno);
                    return;
                }
                JOptionPane.showMessageDialog(this, "Polja za " + porukaZaPrazno + " nisu popunjena.");
                return;

            }
            brojac = 0;
            Object odgovor = validateGodinaIskustva(godStr);
            String porukaZaValidaciju = "";
            if (!ime.isEmpty() && !prezime.isEmpty() && sertifikat != null && !kontakt.isEmpty() && !godStr.isEmpty()) {

                if (!validateIme(ime)) {
                    porukaZaValidaciju += "ime, ";
                    brojac++;
                }
                if (!validatePrezime(prezime)) {
                    porukaZaValidaciju += "prezime, ";
                    brojac++;
                }
                if (!validateKontakt(kontakt)) {
                    porukaZaValidaciju += "kontakt, ";
                    brojac++;
                }
                if (odgovor == null) {
                    porukaZaValidaciju += "godine iskustva, ";
                    brojac++;
                }
                if (brojac == 1 && porukaZaValidaciju.contains("kontakt")) {
                    JOptionPane.showMessageDialog(this, "Polje " + porukaZaValidaciju + " nije u dobrom formatu. "
                            + "Ocekivani format za kontakt telefon je '06X XXX XXXX' ,duzine 9 ili 10 cfiara.");
                    return;

                }
                if (brojac == 1 && porukaZaValidaciju.contains("godine iskustva")) {
                    JOptionPane.showMessageDialog(this, "Polje " + porukaZaValidaciju + " nije u dobrom formatu. "
                            + "Ocekivano je za godine iskustva da budu pozitivan broj manji od 60.");
                    return;
                }
                if (brojac == 1) {
                    JOptionPane.showMessageDialog(this, "Polje " + porukaZaValidaciju + " nije u dobrom formatu.");

                    return;
                }

                if (porukaZaValidaciju.contains("kontakt") && !porukaZaValidaciju.contains("godine iskustva")) {
                    JOptionPane.showMessageDialog(this, "Polja " + porukaZaValidaciju + "nisu u dobrom formatu."
                            + "Ocekivani format za kontakt telefon je '06X XXX XXXX' ,duzine 9 ili 10 cfiara.");
                    return;
                }
                if (!porukaZaValidaciju.contains("kontakt") && porukaZaValidaciju.contains("godine iskustva")) {
                    JOptionPane.showMessageDialog(this, "Polja " + porukaZaValidaciju + "nisu u dobrom formatu."
                            + "Ocekivano je za godine iskustva da budu pozitivan broj manji od 60");
                    return;
                }
                if (porukaZaValidaciju.contains("ime") && porukaZaValidaciju.contains("prezime")
                        && !porukaZaValidaciju.contains("kontakt") && !porukaZaValidaciju.contains("godine iskustva")) {
                    JOptionPane.showMessageDialog(this, "Polja " + porukaZaValidaciju + "nisu u dobrom formatu.");
                    return;
                }
                if (porukaZaValidaciju.contains("kontakt") && porukaZaValidaciju.contains("godine iskustva")) {
                    JOptionPane.showMessageDialog(this, "Polja " + porukaZaValidaciju + "nisu u dobrom formatu."
                            + "Ocekivani format za kontakt telefon je '06X XXX XXXX' ,duzine 9 ili 10 cfiara. "
                            + "Ocekivano je za godine iskustva da budu pozitivan broj manje od 60 ");
                    return;
                }

            }

            godineIsk = (int) odgovor;

            Trener trener = new Trener(0, ime, prezime, kontakt, sertifikat, godineIsk);

            int id = ClientController.getInstance().addTrener(trener);

            JOptionPane.showMessageDialog(this, "Sistem je kreirao trenera");
            cmbSertifikat.setSelectedIndex(-1);
            txtIme.setText("");
            txtKontakt.setText("");
            txtGdnIsk.setText("");
            txtPrezime.setText("");

            trener.setIdTrenera(id);
            String filePath = "src/main/resources/file.json";
            JsonUtils.UpisiUJSONSaNazivomKlase(filePath, trener, "Naziv klase: ", "Trener");

        } catch (Exception e) {

            if (e instanceof IOException) {
                JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
                System.exit(0);

            }
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());

        }
    }//GEN-LAST:event_btnDodajActionPerformed

    /**
     * @param args the command line arguments
     */
    //    public static void main(String args[]) {
    //        /* Set the Nimbus look and feel */
    //        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    //        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    //         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    //         */
    //        try {
    //            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //                if ("Nimbus".equals(info.getName())) {
    //                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //                    break;
    //                }
    //            }
    //        } catch (ClassNotFoundException ex) {
    //            java.util.logging.Logger.getLogger(TrenerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        } catch (InstantiationException ex) {
    //            java.util.logging.Logger.getLogger(TrenerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        } catch (IllegalAccessException ex) {
    //            java.util.logging.Logger.getLogger(TrenerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //            java.util.logging.Logger.getLogger(TrenerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //        }
    //        //</editor-fold>
    //        //</editor-fold>
    //        //</editor-fold>
    //        //</editor-fold>
    //
    //        /* Create and display the form */
    //        java.awt.EventQueue.invokeLater(new Runnable() {
    //            public void run() {
    //                new TrenerForm().setVisible(true);
    //            }
    //        });
    //    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JComboBox<String> cmbSertifikat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtGdnIsk;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKontakt;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {

        switch (mode) {

            case MyConstantsTrener.DODAJ_TRENERA:
//                cmbSertifikat.setSelectedIndex(-1);
                setLocationRelativeTo(null);
                break;
            case MyConstantsTrener.DETALJI:
                btnDodaj.setVisible(false);
                btnOtkazi.setVisible(false);
                txtGdnIsk.setEnabled(false);
                txtIme.setEnabled(false);
                txtPrezime.setEnabled(false);
                txtKontakt.setEnabled(false);
                cmbSertifikat.setEnabled(false);
                break;
        }
    }

    private boolean validateIme(String ime) {

        if (!ime.matches("[a-zA-Z]+") || !Character.isUpperCase(ime.charAt(0))) {
            return false;
        }
        return true;
    }

    private boolean validatePrezime(String prezime) {

        if (!prezime.matches("[a-zA-Z]+") || !Character.isUpperCase(prezime.charAt(0))) {
            return false;
        }
        return true;

    }

    private boolean validateKontakt(String kontakt) {

        if (!kontakt.matches("[\\d]+") || !kontakt.startsWith("06")
                || (kontakt.length() != 9 && kontakt.length() != 10)) {
            return false;
        }
        return true;
    }

    private Object validateGodinaIskustva(String godinaStr) {

        int godinaIsk = 0;
        try {
            godinaIsk = Integer.parseInt(godinaStr);
        } catch (NumberFormatException e) {
            return null;
        }
        if (godinaIsk < 0 || godinaIsk > 60) {
            return null;
        }

        return godinaIsk;

    }

}
