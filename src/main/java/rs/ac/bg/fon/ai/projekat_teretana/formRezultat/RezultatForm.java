/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rs.ac.bg.fon.ai.projekat_teretana.formRezultat;

import java.io.IOException;
import rs.ac.bg.fon.ai.projekat_teretana.controller.ClientController;
import rs.ac.bg.fon.ai.projekat_teretana.domain.Korisnik;
import rs.ac.bg.fon.ai.projekat_teretana.domain.RezultatiKorisnika;
import rs.ac.bg.fon.ai.projekat_teretana.mainForms.MainForm;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import rs.ac.bg.fon.ai.projekat_teretana.domain.Statistika;

/**
 *
 * @author Stefan Segrt
 */
public class RezultatForm extends javax.swing.JDialog {

    MainForm main;
    public static boolean indikator = true;

    /**
     * Creates new form RezultatForm
     */
    public RezultatForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        main = (MainForm) parent;
        System.out.println("sta se desava");
        try {
            popuniComboBoxKorisnicima();
        } catch (Exception e) {
            if (e instanceof IOException) {
                JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
                e.printStackTrace();
                System.exit(0);
            }
            
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbKorisnici = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtProcenatmasti = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtProcenatMisica = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTezina = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Izaberite korisnika:");

        jLabel2.setText("Procenat masti:");

        jLabel3.setText("Procenat misica:");

        jLabel4.setText("Tezina u kg:");

        jLabel5.setText("Datum rezultata:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbKorisnici, 0, 195, Short.MAX_VALUE)
                            .addComponent(txtProcenatmasti)
                            .addComponent(txtProcenatMisica)
                            .addComponent(txtTezina)
                            .addComponent(txtDatum)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(btnSacuvaj)
                        .addGap(36, 36, 36)
                        .addComponent(btnOtkazi)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbKorisnici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProcenatmasti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtProcenatMisica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTezina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnOtkazi))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        try {
            Korisnik k = (Korisnik) cmbKorisnici.getSelectedItem();
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            java.sql.Date datumRezultataSql = validateDatum(txtDatum.getText());

            double procenatMasti = validateMasti(txtProcenatmasti.getText());
            double procenatMisica = validateMisici(txtProcenatMisica.getText());
            double tezinaUKG = validateTezina(txtTezina.getText());

            int brojac = 0;
            String porukaZaPrazno = "";

            if (k == null || txtDatum.getText().isEmpty() || txtProcenatMisica.getText().isEmpty()
                    || txtProcenatmasti.getText().isEmpty() || txtTezina.getText().isEmpty()) {

                if (k == null) {
                    porukaZaPrazno += "korisnik, ";
                    brojac++;
                }
                if (txtDatum.getText().isEmpty()) {
                    porukaZaPrazno += "datum rezultata, ";
                    brojac++;
                }
                if (txtProcenatMisica.getText().isEmpty()) {
                    porukaZaPrazno += "procenat misica, ";
                    brojac++;
                }
                if (txtProcenatmasti.getText().isEmpty()) {
                    porukaZaPrazno += "procenat masti, ";
                    brojac++;
                }
                if (txtTezina.getText().isEmpty()) {
                    porukaZaPrazno += "tezina ";
                    brojac++;
                }
                if (brojac == 1) {
                    porukaZaPrazno = "Polje " + porukaZaPrazno + " nije popunjeno";
                    JOptionPane.showMessageDialog(this, porukaZaPrazno);
                    return;
                }
                JOptionPane.showMessageDialog(this, "Polja " + porukaZaPrazno + " nisu popunjena");
                return;
            }

            brojac = 0;
            String porukaZaValidaciju = "";

            if (datumRezultataSql == null) {
                porukaZaValidaciju += "datum rezultata, ";
                brojac++;
            }
            if (procenatMasti == 0) {
                porukaZaValidaciju += "procenat masti, ";
                brojac++;
            }
            if (procenatMisica == 0) {
                porukaZaValidaciju += "procenat misica, ";
                brojac++;
            }
            if (tezinaUKG == 0) {
                porukaZaValidaciju += "tezina ";
                brojac++;
            }
            if (brojac == 1) {
                porukaZaValidaciju = "Polje " + porukaZaValidaciju + " nije u dobrom formatu";
                JOptionPane.showMessageDialog(this, porukaZaValidaciju);
                return;
            }
            if (!porukaZaValidaciju.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Polja " + porukaZaValidaciju + " nisu u dobrom formatu.");
                return;
            }
            Statistika s = new Statistika(0, procenatMasti, procenatMisica, tezinaUKG);
            RezultatiKorisnika rk = new RezultatiKorisnika(0, k, datumRezultataSql, s);
            int id = ClientController.getInstance().addRezultat(rk);

            JOptionPane.showMessageDialog(this, "Sistem je kreirao rezultat korisnika");

            refreshForm();

        } catch (Exception ex) {

            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "GRESKA,POKUSAJTE KASNIJE!!!!!");
                System.exit(0);

            }
            ex.printStackTrace();

            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RezultatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RezultatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RezultatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RezultatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RezultatForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Korisnik> cmbKorisnici;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtProcenatMisica;
    private javax.swing.JTextField txtProcenatmasti;
    private javax.swing.JTextField txtTezina;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxKorisnicima() throws Exception {

        List<Korisnik> korisnici = ClientController.getInstance().getListKorisnik();
        System.out.println("sto ne radis");
        for (Korisnik korisnik : korisnici) {
            cmbKorisnici.addItem(korisnik);
        }
        cmbKorisnici.setSelectedIndex(-1);

    }

    private void refreshForm() {

        txtDatum.setText("");
        txtProcenatMisica.setText("");
        txtProcenatmasti.setText("");
        txtTezina.setText("");
        cmbKorisnici.setSelectedIndex(-1);
    }

    private double validateMasti(String mastiStr) {

        double masti = 0;
        try {
            masti = Double.parseDouble(mastiStr);
        } catch (NumberFormatException nfe) {
            return 0;
        }
        if (masti <= 0) {
            return 0;
        }
        return masti;
    }

    private double validateMisici(String misiciStr) {

        double misici = 0;
        try {
            misici = Double.parseDouble(misiciStr);
        } catch (NumberFormatException nfe) {
            return 0;
        }
        if (misici <= 0) {
            return 0;
        }
        return misici;
    }

    private double validateTezina(String tezinaStr) {

        double tezina = 0;
        try {
            tezina = Double.parseDouble(tezinaStr);
        } catch (NumberFormatException nfe) {
            return 0;
        }
        if (tezina <= 0) {
            return 0;
        }
        return tezina;
    }

    private java.sql.Date validateDatum(String datumStr) {

        Date datum;
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        try {
            datum = sdf.parse(datumStr);
        } catch (ParseException pe) {
            return null;
        }
        if (datum.after(new Date()) || datumStr.length() != sdf.format(datum).length()) {
            return null;
        }
        java.sql.Date datumSql = new java.sql.Date(datum.getTime());
        return datumSql;

    }

}
